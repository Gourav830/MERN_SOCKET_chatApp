{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\chatApp\\\\frontend\\\\src\\\\components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyChats() {\n  _s();\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"   \", /*#__PURE__*/_jsxDEV(Box, {\n      d: {\n        base: selectedChat ? \"none\" : \"flex\",\n        md: \"flex\"\n      },\n      flexDir: \"column\",\n      alignItems: \"center\",\n      p: 3,\n      bg: \"white\",\n      w: {\n        base: \"100%\",\n        md: \"31%\"\n      },\n      borderRadius: \"lg\",\n      borderWidth: \"1px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        pb: 3,\n        px: 3,\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        w: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            d: \"flex\",\n            fontSize: {\n              base: \"17px\",\n              md: \"10px\",\n              lg: \"17px\"\n            },\n            rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 20\n            }, this),\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }, this);\n}\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", true);\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyChats","_s","loggedUser","setLoggedUser","useState","selectedChat","setSelectedChat","user","chats","setChats","ChatState","toast","useToast","fetchChats","config","headers","Authorization","token","data","axios","get","error","title","description","status","duration","isClosable","position","useEffect","JSON","parse","localStorage","getItem","fetchAgain","children","Box","d","base","md","flexDir","alignItems","p","bg","w","borderRadius","borderWidth","pb","px","fontSize","fontFamily","justifyContent","GroupChatModal","Button","lg","rightIcon","AddIcon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/chatApp/frontend/src/components/MyChats.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction MyChats() {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n  const toast = useToast();\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (<div>   <Box\r\n  d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n  flexDir=\"column\"\r\n  alignItems=\"center\"\r\n  p={3}\r\n  bg=\"white\"\r\n  w={{ base: \"100%\", md: \"31%\" }}\r\n  borderRadius=\"lg\"\r\n  borderWidth=\"1px\"\r\n>\r\n  <Box\r\n    pb={3}\r\n    px={3}\r\n    fontSize={{ base: \"28px\", md: \"30px\" }}\r\n    fontFamily=\"Work sans\"\r\n    d=\"flex\"\r\n    w=\"100%\"\r\n    justifyContent=\"space-between\"\r\n    alignItems=\"center\"\r\n  >\r\n    My Chats\r\n    <GroupChatModal>\r\n      <Button\r\n        d=\"flex\"\r\n        fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n        rightIcon={<AddIcon />}\r\n      >\r\n        New Group Chat\r\n      </Button>\r\n    </GroupChatModal>\r\n  </Box>\r\n  </Box>\r\n  </div>);\r\n}\r\n\r\nexport default MyChats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}