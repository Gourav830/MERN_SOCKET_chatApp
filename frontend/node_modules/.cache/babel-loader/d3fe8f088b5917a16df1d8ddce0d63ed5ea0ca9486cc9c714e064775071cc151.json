{"ast":null,"code":"// import { useHistory } from \"react-router-dom\";\n\n// import React, { createContext, useContext, useEffect, useState } from \"react\";\n\n// const ChatContext = createContext();\n// const ChatProvider = ({ children }) => {\n//   const [user, setUser] = useState();\n//   const [selectedChat,setSelectedChat] = useState();\n//   const [chats, setChats] = useState();\n//   const history = useHistory();\n//   useEffect(() => {\n//     const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n//     setUser(userInfo);\n//     if (!userInfo) {\n//       history.push(\"/\");\n//     }\n//   }, [history]);\n//   return (\n//     <ChatContext.Provider\n//       value={{ user, setUser, chats, setChats, selectedChat, setSelectedChat }}\n//     >\n//       {children}\n//     </ChatContext.Provider>\n//   );\n// };\n// export const ChatState = () => {\n//   return useContext(ChatContext);\n// };\n// export default ChatProvider;","map":{"version":3,"names":[],"sources":["C:/Users/ASUS/Desktop/chatApp/frontend/src/Context/ChatProvider.js"],"sourcesContent":["// import { useHistory } from \"react-router-dom\";\n\n// import React, { createContext, useContext, useEffect, useState } from \"react\";\n\n// const ChatContext = createContext();\n// const ChatProvider = ({ children }) => {\n//   const [user, setUser] = useState();\n//   const [selectedChat,setSelectedChat] = useState();\n//   const [chats, setChats] = useState();\n//   const history = useHistory();\n//   useEffect(() => {\n//     const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n//     setUser(userInfo);\n//     if (!userInfo) {\n//       history.push(\"/\");\n//     }\n//   }, [history]);\n//   return (\n//     <ChatContext.Provider\n//       value={{ user, setUser, chats, setChats, selectedChat, setSelectedChat }}\n//     >\n//       {children}\n//     </ChatContext.Provider>\n//   );\n// };\n// export const ChatState = () => {\n//   return useContext(ChatContext);\n// };\n// export default ChatProvider;\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}